# This is a basic workflow to help you get started with Actions

name: CI-quarkus-kafka-producer

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
#   pull_request:
#     branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  quarkus_native_build:
    # The type of runner that the job will run on
    
    strategy:
      matrix:
        java: [11]
        os: [ubuntu-latest]
        nodejs-version: [12]
        python-version: [3.8]
        docker-version: [19.09]
        docker-channel: [stable]
        
    name: Java ${{ matrix.java }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      HASH: $(git rev-parse --short "$GITHUB_SHA")
      BRANCH: ${GITHUB_REF##*/}
      SERVICE_NAME: ${{ secrets.SERVICE_NAME }}
      BOOTSTRAP_SERVER : ${{ secrets.BOOTSTRAP_SERVER }}
      CLIENT_ID : ${{ secrets.CLIENT_ID }}
      CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      GROUP_ID: ${{ secrets.GROUP_ID }}
      OAUTH_TOKEN_ENDPOINT_URI: ${{ secrets.OAUTH_TOKEN_ENDPOINT_URI }}
      APP_ID: APPDEV_APP_GHA_12345
      

   #   PROJECT_ID: ${{ secrets.PROJECT_ID }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout the code
        uses: actions/checkout@v2
      # - uses: google-github-actions/setup-gcloud@master
      #   with:
      #     service_account_key: ${{ secrets.GCR_DEVOPS_SERVICE_ACCOUNT_KEY }}
      #     project_id: ${{ secrets.PROJECT_ID }}
      #     export_default_credentials: true
        
      - name: Setup Docker ${{ matrix.docker-channel }} ${{ matrix.docker-version }}
        uses: docker-practice/actions-setup-docker@master
        with:
          docker_version: ${{ matrix.docker-version }}
          docker_channel: ${{ matrix.docker-channel }}
      # Setup gcloud CLI
         
      # - name: GCR Auth 
      #   run: |-
      #     gcloud auth configure-docker -q   
     
      - name: Setup java ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Cache maven deps ~/.m2/repository
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-${{ matrix.os }}-maven-
          restore-keys: |
            ${{ runner.os }}-${{ matrix.os }}-maven-
      - name: Maven Init
        run: |
          cd $GITHUB_WORKSPACE/producer && chmod a+x ./mvnw && ./mvnw quarkus:add-extension -Dextensions="container-image-docker" && ./mvnw clean install
          
      #  && ./mvnw quarkus:dev &
      #    wait-port 8080
      # Runs a single command using the runners shell
      # - name: Run maven test
      #   run: |
      #      cd $GITHUB_WORKSPACE && ./mvnw test 
      #     cd $GITHUB_WORKSPACE && ./mvnw compile quarkus:dev -Ddebug=false && wait-port 8080 &&  echo 'q'
      - name: Set commit tag sha1 outputs
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
        
      - name: Run quarkus native package building
        run: |     
           cd $GITHUB_WORKSPACE/producer && ./mvnw package -Pnative -Dquarkus.container-image.builder=docker -Dquarkus.native.container-build=true -Dquarkus.container-image.build=true -Dquarkus.container-image.tag=${{ steps.vars.outputs.sha_short }} 
           docker images
     #   cd $GITHUB_WORKSPACE && ./mvnw package -Pnative 
     #     cd $GITHUB_WORKSPACE &&
     #         docker image tag runner/$SERVICE_NAME:${{ steps.vars.outputs.sha_short }}    gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ steps.vars.outputs.sha_short }}

      - name: list docker images
        run:  docker images 
      - name: tag imge for quay.io push
        run : |
           docker login -u=${{ secrets.DOCKER_USER }} -p=${{ secrets.DOCKER_PASSWORD }} quay.io
           docker image tag runner/kafka-streams-appdevdemo-producer:${{ steps.vars.outputs.sha_short }}    quay.io/jmaira/appdev_aggregator:${{ steps.vars.outputs.sha_short }}
           docker images 
           docker push quay.io/jmaira/appdev_producer:${{ steps.vars.outputs.sha_short }}
        
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell key update trigger again
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      